#!/bin/sh

# Error handling

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT
set -e

# Utility methods

fancy_echo() {
  local fmt="$1"; shift
  printf "\n$fmt\n" "$@"
}

git_clone_or_pull() {
  local REPOSRC=$1
  local LOCALREPO=$2
  local LOCALREPO_VC_DIR=$LOCALREPO/.git
  if [ ! -d $LOCALREPO_VC_DIR ]; then
    git clone --recursive $REPOSRC $LOCALREPO
  else
    pushd $LOCALREPO
    git pull $REPOSRC && git submodule update --init --recursive
    popd
  fi
}

# Welcome

echo
echo "Welcome to the Accedian NPAV OSX laptop script"
echo "----------------------------------------------"
echo

# Usage

usage() {
  echo "Usage: $0 [-e <test>]" 1>&2
  exit 1
}

# Handle some options

while getopts ":e:" opt; do
  case $opt in
    e)
      environment=${OPTARG}
      if [ "$environment" != "test" ]; then
        usage
      fi
      ;;
    *)
      usage
      ;;
  esac
done

# Common setup

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

# Source the child scripts
[ $environment ] && prefix="lib/" || prefix=""

source "${prefix}shell"

# source "${prefix}git"
# source "${prefix}homebrew"
# source "${prefix}ide"
# source "${prefix}images"
# source "${prefix}server"

# source "${prefix}terminal"
# source "${prefix}unix"
# source "${prefix}web"
# source "${prefix}xcode"

echo
