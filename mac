#!/bin/sh

# Error handling

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT
set -e

# Utility methods

append_to_zshrc() {
  local text="$1" zshrc
  local skip_new_line="${2:-0}"

  if [ -w "$HOME/.zshrc.local" ]; then
    zshrc="$HOME/.zshrc.local"
  else
    zshrc="$HOME/.zshrc"
  fi

  if ! grep -Fqs "$text" "$zshrc"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\n" "$text" >> "$zshrc"
    else
      printf "\n%s\n" "$text" >> "$zshrc"
    fi
  fi
}

app_is_installed() {
  local app_name
  app_name=$(echo "$1" | cut -d'-' -f1)
  find /Applications -iname "$app_name*" -maxdepth 1 | egrep '.*' > /dev/null
}

fancy_echo() {
  local fmt="$1"; shift
  printf "\n$fmt\n" "$@"
}

git_clone_or_pull() {
  local REPOSRC=$1
  local LOCALREPO=$2
  local LOCALREPO_VC_DIR=$LOCALREPO/.git
  if [ ! -d $LOCALREPO_VC_DIR ]; then
    git clone --recursive $REPOSRC $LOCALREPO
  else
    pushd $LOCALREPO
    git pull $REPOSRC && git submodule update --init --recursive
    popd
  fi
}

# Welcome

echo
echo "Welcome to the Accedian NPAV OSX laptop script"
echo "----------------------------------------------"
echo

# Usage

usage() {
  echo "Usage: $0 [-e <test>]" 1>&2
  exit 1
}

# Handle some options

while getopts ":e:" opt; do
  case $opt in
    e)
      environment=${OPTARG}
      if [ "$environment" != "test" ]; then
        usage
      fi
      ;;
    *)
      usage
      ;;
  esac
done

# Common setup

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

# Source the child scripts
[ $environment ] && prefix="lib/" || prefix="./"

source "${prefix}homebrew"
source "${prefix}terminal"
source "${prefix}unix"
source "${prefix}git"
source "${prefix}ide"
source "${prefix}xcode"
source "${prefix}server"
source "${prefix}web"
source "${prefix}tools"
source "${prefix}postinstall"

# Run local customizations
if [ -f "$HOME/.laptop.local" ]; then
  fancy_echo "Running your customizations from ~/.laptop.local ..."
  . "$HOME/.laptop.local"
fi
